 public ruleBase Decisao {
 		  
		  rule AndarAleatoriamente {
		    declarations
		        AgenteMapa am;
		    conditions
		    	am.getMapa().existemElementosCima(am.getAgente().getPosicao()) == -1;
				am.getMapa().existemElementosBaixo(am.getAgente().getPosicao()) == -1;
				am.getMapa().existemElementosDireita(am.getAgente().getPosicao()) == -1; 
				am.getMapa().existemElementosEsquerda(am.getAgente().getPosicao()) == -1;
		    actions
		      am.getAgente().setDecisao(1);
		      modified(am);
		  }
		  
		  rule UsarPokebola {
		    declarations
		      AgenteMapa am;
		    conditions
		    	am.getMapa().existemElementosCima(am.getAgente().getPosicao()) >= 4 ||
		    	am.getMapa().existemElementosBaixo(am.getAgente().getPosicao()) >= 4 || 
		    	am.getMapa().existemElementosEsquerda(am.getAgente().getPosicao()) >= 4 ||
		    	am.getMapa().existemElementosDireita(am.getAgente().getPosicao()) >= 4;
		    	am.getAgente().getQuantidadePokebolas() > 0;
		    actions
		      am.getAgente().setDecisao(2);
		      modified(am);
		  }
		  
		  rule Batalhar {
		    declarations
		      AgenteMapa am;
		    conditions
		    	am.getMapa().existemElementosCima(am.getAgente().getPosicao()) == 3 ||
		    	am.getMapa().existemElementosBaixo(am.getAgente().getPosicao()) == 3 ||
		    	am.getMapa().existemElementosEsquerda(am.getAgente().getPosicao()) == 3 ||
		    	am.getMapa().existemElementosDireita(am.getAgente().getPosicao()) == 3;
		    	am.getMapa().existemElementosCima(am.getAgente().getPosicao()) < 4;
		    	am.getMapa().existemElementosBaixo(am.getAgente().getPosicao()) < 4;
		    	am.getMapa().existemElementosDireita(am.getAgente().getPosicao()) < 4;
		    	am.getMapa().existemElementosEsquerda(am.getAgente().getPosicao()) < 4;
		    	(am.getMapa().existemElementosCima(am.getAgente().getPosicao()) != 1 &&
		    	am.getMapa().existemElementosBaixo(am.getAgente().getPosicao()) != 1 &&
		    	am.getMapa().existemElementosDireita(am.getAgente().getPosicao()) != 1 &&
		    	am.getMapa().existemElementosEsquerda(am.getAgente().getPosicao()) != 1)||
		    	(((am.getMapa().existemElementosCima(am.getAgente().getPosicao()) == 1)||
		    	(am.getMapa().existemElementosBaixo(am.getAgente().getPosicao()) == 1) ||
		    	(am.getMapa().existemElementosDireita(am.getAgente().getPosicao()) == 1)||
		    	(am.getMapa().existemElementosEsquerda(am.getAgente().getPosicao()) == 1)) && 
		    	am.getAgente().isPokemonsRecuperados());	
		    actions
		      am.getAgente().setDecisao(3);
		      modified(am);
		  }
		  
		  rule RecuperarPokemons {
		    declarations
		      AgenteMapa am;
		    conditions
		    	am.getMapa().existemElementosCima(am.getAgente().getPosicao()) == 1;
		    	am.getMapa().existemElementosBaixo(am.getAgente().getPosicao()) == 1;
		    	am.getMapa().existemElementosDireita(am.getAgente().getPosicao()) == 1;
		    	am.getMapa().existemElementosEsquerda(am.getAgente().getPosicao()) == 1;
		    	!am.getAgente().isPokemonsRecuperados();
		    actions
		      am.getAgente().setDecisao(4);
		      modified(am);
		  }
		  
		  rule ComprarPokebolas {
		    declarations
		      AgenteMapa am;
		    conditions
		    	am.getMapa().existemElementosCima(am.getAgente().getPosicao()) == 2 ||
		    	am.getMapa().existemElementosBaixo(am.getAgente().getPosicao()) == 2 ||
		    	am.getMapa().existemElementosDireita(am.getAgente().getPosicao()) == 2 ||
		    	am.getMapa().existemElementosEsquerda(am.getAgente().getPosicao()) == 2;
		    	am.getAgente().getQuantidadePokebolas() == 0;
		    actions
		      am.getAgente().setDecisao(5);
		      modified(am);
		  }
		  
  }
